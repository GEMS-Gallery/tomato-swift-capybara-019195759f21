type UserProfile = 
 record {
   bio: text;
   followers: vec UserId;
   following: vec UserId;
   userId: UserId;
   username: text;
 };
type UserId = principal;
type TweetId = nat;
type Tweet = 
 record {
   author: UserId;
   content: text;
   id: TweetId;
   likes: nat;
   retweets: nat;
   timestamp: Time;
 };
type Time = int;
type Result_2 = 
 variant {
   err: text;
   ok;
 };
type Result_1 = 
 variant {
   err: text;
   ok: Tweet;
 };
type Result = 
 variant {
   err: text;
   ok: UserProfile;
 };
service : {
  create_tweet: (text) -> (Result_1);
  follow_user: (UserId) -> (Result_2);
  get_all_tweets: () -> (vec Tweet) query;
  get_user_feed: (UserId) -> (vec Tweet) query;
  get_user_profile: (UserId) -> (Result) query;
  like_tweet: (TweetId) -> (Result_1);
  retweet: (TweetId) -> (Result_1);
  update_user_profile: (text, text) -> (Result);
}
